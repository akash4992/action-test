name: CI + CD + Deploy

on:
  push:
    branches:
      - Development
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: myapp/nginx

jobs:

  BuildImageDev:
    if: startsWith(github.ref, 'refs/heads/Development')
    runs-on: ubuntu-latest
    environment: Development
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Set Image Tag
        id: set_tag
        run: |
          echo "image_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:${{ steps.set_tag.outputs.image_tag }} .

  DeployDev:
    if: startsWith(github.ref, 'refs/heads/Development')
    needs: BuildImageDev
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - run: echo "Deploying DEV with image: ${{ needs.BuildImageDev.outputs.image_tag }}"

  DeployQA:
    if: startsWith(github.ref, 'refs/heads/Development')
    needs: BuildImageDev
    runs-on: ubuntu-latest
    environment: QA
    steps:
      - run: echo "Deploying QA with image: ${{ needs.BuildImageDev.outputs.image_tag }}"

  DeployStaging:
    if: startsWith(github.ref, 'refs/heads/Development')
    needs: BuildImageDev
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - run: echo "Deploying STAGING with image: ${{ needs.BuildImageDev.outputs.image_tag }}"

  BuildImageProd:
    if: startsWith(github.ref, 'refs/heads/main')
    runs-on: ubuntu-latest
    environment: Production
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Set Image Tag
        id: set_tag
        run: |
          echo "image_tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:${{ steps.set_tag.outputs.image_tag }} .

  DeployProd:
    if: startsWith(github.ref, 'refs/heads/main')
    needs: BuildImageProd
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - run: echo "Deploying PROD with image: ${{ needs.BuildImageProd.outputs.image_tag }}"
